server:
  port: 8091
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: asistente
          uri: lb://mcs-asistente
          predicates:
            - Path=/api/asistente/**
          filters:
            - StripPrefix=2
#          metadata:
#            cors:
#              allowedOrigins: '*'
#              allowedMethods: '*'
#              allowedHeaders: '*'
#              exposedHeaders: '*'
#              maxAge: 1000
        - id: usuarios
          uri: lb://mcs-usuarios
          predicates:
            - Path=/api/usuarios/**
          filters:
            - StripPrefix=2
        - id: chatbot
          uri: lb://nest-service
          predicates:
            - Path=/api/chatbot/**
          filters:
            - StripPrefix=2
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: '*'
            allowed-methods:
                - GET
                - POST
            allowed-origin-patterns: '*'
            allowed-headers: '*'
            allow-credentials: false
            max-age: 1000
            exposed-headers: '*'
    consul:
      discovery:
        enabled: true
        register: true
        service-name: ${spring.application.name}
        instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  config:
    import: optional:configserver:http://tesis-config:8888
logging:
  level:
    com.ecwid.consul: DEBUG
    org.springframework.cloud.consul: DEBUG
